(function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):(a="undefined"==typeof globalThis?a||self:globalThis,a.CS=b())})(this,function(){'use strict';class a{constructor(){this.evts=new Map}on(a,b){if(!a||!b)return;const c=this.evts.get(a),d=c&&c.push(b);d||this.evts.set(a,[b])}off(a,b){if(a&&b){const c=this.evts.get(a);c&&c.splice(c.indexOf(b)>>>0,1)}}emit(a,b){(this.evts.get(a)||[]).slice().forEach(a=>{a(b)}),(this.evts.get("*")||[]).slice().forEach(c=>{c(a,b)})}}const b=()=>Math.random().toString(36).substr(2);class c extends a{constructor(a){super(),this.url=a,this.sendTimeout=1e4,this._progress=new Map,this._init()}get adapterName(){return 0===this.url.indexOf("ws")?"ws":"http"}async resetUrl(a){this.destroy(),this.url=a,this._init()}destroy(){this.adapter&&(this.adapter.close(),this.adapter=null)}async send(a,c){const d={cmd:a,data:c,seqno:b()};let e;if(e="ws"===this.adapterName?await this._sendByWs(d):await fetch(this.url,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(d),credentials:"include"}).then(a=>a.json()),0!=e.code){const a=new Error(e.msg);throw a.response=e,a}return e.data}_init(){this.adapter&&this.destroy(),this.adapter="ws"===this.adapterName?this._initWs():this._initHttp(),this._events()}_initWs(){const a=new WebSocket(this.url);return a.addEventListener("close",a=>{console.log(a)}),a}_initHttp(){return new EventSource(this.url)}_events(){this.adapter.onopen=a=>{this.emit("cs.connected",a)},this.adapter.onclose=a=>{this.emit("cs.closed",a),"ws"===this.adapterName&&setTimeout(this._init.bind(this),100)},this.adapter.onmessage=this._onMessage.bind(this)}_onMessage(a){const b=JSON.parse(a.data);this.emit("cs.message",b);const{cmd:c,seqno:d,data:e}=b;this.emit(c,e);const f=this._progress.get(d);if(f){const[a]=f;a(b)}}_invokeProgress(){}_sendByWs(a){return new Promise((b,c)=>{const d=a.seqno,e=a=>{c(a),f()},f=()=>{clearTimeout(g),this._progress.delete(d)},g=setTimeout(()=>{e(new Error("websocket send wait timeout"))},this.sendTimeout);this._progress.set(d,[a=>{const{cmd:d,code:e,msg:g,data:h}=a;if(0!=e){const b=new Error(g);return b.response=a,void c(b)}b(a),f()}]);const h=JSON.stringify(a);this.adapter.send(h)})}}return c});